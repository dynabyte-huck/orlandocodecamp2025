{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.34.44.8038",
      "templateHash": "15787336445317592881"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the environment that can be used as part of naming resource convention, the name of the resource group for your application will use this name, prefixed with rg-"
      }
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The location used for all deployed resources"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    }
  },
  "variables": {
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2022-09-01",
      "name": "[format('rg-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "resources",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "14577132254635551406"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The location used for all deployed resources"
              }
            },
            "principalId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Id of the user or app to assign application roles"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags that will be applied to all resources"
              }
            }
          },
          "variables": {
            "resourceToken": "[uniqueString(resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments/dotNetComponents",
              "apiVersion": "2024-02-02-preview",
              "name": "[format('{0}/{1}', format('cae-{0}', variables('resourceToken')), 'aspire-dashboard')]",
              "properties": {
                "componentType": "AspireDashboard"
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('mi-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-07-01",
              "name": "[replace(format('acr-{0}', variables('resourceToken')), '-', '')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', replace(format('acr-{0}', variables('resourceToken')), '-', ''))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', '')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', ''))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('law-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2024-02-02-preview",
              "name": "[format('cae-{0}', variables('resourceToken'))]",
              "location": "[parameters('location')]",
              "properties": {
                "workloadProfiles": [
                  {
                    "workloadProfileType": "Consumption",
                    "name": "consumption"
                  }
                ],
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken'))), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken'))), '2022-10-01').primarySharedKey]"
                  }
                }
              },
              "tags": "[parameters('tags')]",
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.App/managedEnvironments/{0}', format('cae-{0}', variables('resourceToken')))]",
              "name": "[guid(resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken'))), parameters('principalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]"
              ]
            }
          ],
          "outputs": {
            "MANAGED_IDENTITY_CLIENT_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').clientId]"
            },
            "MANAGED_IDENTITY_NAME": {
              "type": "string",
              "value": "[format('mi-{0}', variables('resourceToken'))]"
            },
            "MANAGED_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken'))), '2023-01-31').principalId]"
            },
            "AZURE_LOG_ANALYTICS_WORKSPACE_NAME": {
              "type": "string",
              "value": "[format('law-{0}', variables('resourceToken'))]"
            },
            "AZURE_LOG_ANALYTICS_WORKSPACE_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('law-{0}', variables('resourceToken')))]"
            },
            "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', replace(format('acr-{0}', variables('resourceToken')), '-', '')), '2023-07-01').loginServer]"
            },
            "AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('mi-{0}', variables('resourceToken')))]"
            },
            "AZURE_CONTAINER_REGISTRY_NAME": {
              "type": "string",
              "value": "[replace(format('acr-{0}', variables('resourceToken')), '-', '')]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_NAME": {
              "type": "string",
              "value": "[format('cae-{0}', variables('resourceToken'))]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken')))]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceToken'))), '2024-02-02-preview').defaultDomain]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "c-aspiredaprdemo",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.MANAGED_IDENTITY_PRINCIPAL_ID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "17087774139744540547"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The location for the resource(s) to be deployed."
              }
            },
            "principalId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2024-08-15",
              "name": "[take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44)]",
              "location": "[parameters('location')]",
              "properties": {
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0
                  }
                ],
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "databaseAccountOfferType": "Standard",
                "disableLocalAuth": true
              },
              "kind": "GlobalDocumentDB",
              "tags": {
                "aspire-resource-name": "c-aspiredaprdemo"
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2024-08-15",
              "name": "[format('{0}/{1}', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44), 'cdb-aspiredaprdemo')]",
              "location": "[parameters('location')]",
              "properties": {
                "resource": {
                  "id": "cdb-aspiredaprdemo"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2024-08-15",
              "name": "[format('{0}/{1}/{2}', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44), 'cdb-aspiredaprdemo', 'cdc-aspiredaprdemo')]",
              "location": "[parameters('location')]",
              "properties": {
                "resource": {
                  "id": "cdc-aspiredaprdemo",
                  "partitionKey": {
                    "paths": [
                      "/id"
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44), 'cdb-aspiredaprdemo')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
              "apiVersion": "2024-08-15",
              "name": "[format('{0}/{1}', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44), guid(parameters('principalId'), resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44), '00000000-0000-0000-0000-000000000002'), resourceId('Microsoft.DocumentDB/databaseAccounts', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44))))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44), '00000000-0000-0000-0000-000000000002')]",
                "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44))]"
              ]
            }
          ],
          "outputs": {
            "connectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', take(format('caspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 44)), '2024-08-15').documentEndpoint]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dapr",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "clientId": {
            "value": ""
          },
          "cosmosCollectionName": {
            "value": "cdc-aspiredaprdemo"
          },
          "cosmosDatabaseName": {
            "value": "cdb-aspiredaprdemo"
          },
          "cosmosUrl": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'c-aspiredaprdemo'), '2022-09-01').outputs.connectionString.value]"
          },
          "keyVaultName": {
            "value": "kv-aspiredaprdemo"
          },
          "managedEnvironmentName": {
            "value": "Development"
          },
          "messagingNamespace": {
            "value": "sb-aspiredaprdemo.servicebus.windows.net"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "5334386024897943941"
            }
          },
          "parameters": {
            "managedEnvironmentName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "cosmosUrl": {
              "type": "string"
            },
            "messagingNamespace": {
              "type": "string"
            },
            "cosmosCollectionName": {
              "type": "string"
            },
            "cosmosDatabaseName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments/daprComponents",
              "apiVersion": "2024-10-02-preview",
              "name": "[format('{0}/{1}', parameters('managedEnvironmentName'), 'demosecretstore')]",
              "properties": {
                "componentType": "secretstores.azure.keyvault",
                "metadata": [
                  {
                    "name": "vaultName",
                    "value": "[parameters('keyVaultName')]"
                  },
                  {
                    "name": "azureClientId",
                    "value": "[parameters('clientId')]"
                  }
                ],
                "version": "v1"
              }
            },
            {
              "type": "Microsoft.App/managedEnvironments/daprComponents",
              "apiVersion": "2024-10-02-preview",
              "name": "[format('{0}/{1}', parameters('managedEnvironmentName'), 'demopubsub')]",
              "properties": {
                "componentType": "pubsub.azure.servicebus.queues",
                "metadata": [
                  {
                    "name": "namespaceName",
                    "value": "[parameters('messagingNamespace')]"
                  },
                  {
                    "name": "azureClientId",
                    "value": "[parameters('clientId')]"
                  }
                ],
                "version": "v1"
              }
            },
            {
              "type": "Microsoft.App/managedEnvironments/daprComponents",
              "apiVersion": "2024-10-02-preview",
              "name": "[format('{0}/{1}', parameters('managedEnvironmentName'), 'demostore')]",
              "properties": {
                "componentType": "state.azure.cosmosdb",
                "ignoreErrors": false,
                "metadata": [
                  {
                    "name": "url",
                    "value": "[parameters('cosmosUrl')]"
                  },
                  {
                    "name": "database",
                    "value": "[parameters('cosmosDatabaseName')]"
                  },
                  {
                    "name": "collection",
                    "value": "[parameters('cosmosCollectionName')]"
                  },
                  {
                    "name": "azureClientId",
                    "value": "[parameters('clientId')]"
                  }
                ],
                "version": "v1"
              }
            },
            {
              "type": "Microsoft.App/managedEnvironments/daprComponents",
              "apiVersion": "2024-10-02-preview",
              "name": "[format('{0}/{1}', parameters('managedEnvironmentName'), 'democronjob')]",
              "properties": {
                "componentType": "bindings.cron",
                "version": "v1",
                "metadata": [
                  {
                    "name": "schedule",
                    "value": "@every 60m"
                  },
                  {
                    "name": "direction",
                    "value": "input"
                  }
                ],
                "scopes": [
                  "demowrkflwsvc"
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'c-aspiredaprdemo')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "kv-aspiredaprdemo",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.MANAGED_IDENTITY_PRINCIPAL_ID.value]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "2736747809608715106"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The location for the resource(s) to be deployed."
              }
            },
            "principalType": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[take(format('kvaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 24)]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[tenant().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enableRbacAuthorization": true
              },
              "tags": {
                "aspire-resource-name": "kv-aspiredaprdemo"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', take(format('kvaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 24))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', take(format('kvaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 24)), parameters('principalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
                "principalType": "[parameters('principalType')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', take(format('kvaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 24))]"
              ]
            }
          ],
          "outputs": {
            "vaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', take(format('kvaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 24)), '2023-07-01').vaultUri]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sb-aspiredaprdemo",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.MANAGED_IDENTITY_PRINCIPAL_ID.value]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "15405412485896657684"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "The location for the resource(s) to be deployed."
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard"
            },
            "principalType": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ServiceBus/namespaces",
              "apiVersion": "2024-01-01",
              "name": "[take(format('sbaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 50)]",
              "location": "[parameters('location')]",
              "properties": {
                "disableLocalAuth": true
              },
              "sku": {
                "name": "[parameters('sku')]"
              },
              "tags": {
                "aspire-resource-name": "sb-aspiredaprdemo"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ServiceBus/namespaces/{0}', take(format('sbaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 50))]",
              "name": "[guid(resourceId('Microsoft.ServiceBus/namespaces', take(format('sbaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 50)), parameters('principalId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '090c5cfd-751d-490a-894a-3ce6f1109419'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '090c5cfd-751d-490a-894a-3ce6f1109419')]",
                "principalType": "[parameters('principalType')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', take(format('sbaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 50))]"
              ]
            },
            {
              "type": "Microsoft.ServiceBus/namespaces/queues",
              "apiVersion": "2024-01-01",
              "name": "[format('{0}/{1}', take(format('sbaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 50), 'sbq-aspiredaprdemo')]",
              "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', take(format('sbaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 50))]"
              ]
            }
          ],
          "outputs": {
            "serviceBusEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ServiceBus/namespaces', take(format('sbaspiredaprdemo-{0}', uniqueString(resourceGroup().id)), 50)), '2024-01-01').serviceBusEndpoint]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "MANAGED_IDENTITY_CLIENT_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.MANAGED_IDENTITY_CLIENT_ID.value]"
    },
    "MANAGED_IDENTITY_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.MANAGED_IDENTITY_NAME.value]"
    },
    "AZURE_LOG_ANALYTICS_WORKSPACE_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_LOG_ANALYTICS_WORKSPACE_NAME.value]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT.value]"
    },
    "AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_REGISTRY_MANAGED_IDENTITY_ID.value]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_REGISTRY_NAME.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_NAME.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_DEFAULT_DOMAIN.value]"
    },
    "C_ASPIREDAPRDEMO_CONNECTIONSTRING": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'c-aspiredaprdemo'), '2022-09-01').outputs.connectionString.value]"
    },
    "KV_ASPIREDAPRDEMO_VAULTURI": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'kv-aspiredaprdemo'), '2022-09-01').outputs.vaultUri.value]"
    },
    "SB_ASPIREDAPRDEMO_SERVICEBUSENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'sb-aspiredaprdemo'), '2022-09-01').outputs.serviceBusEndpoint.value]"
    }
  }
}